name: Deploy to VPS (SSH)

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SERVER_HOST: ${{ secrets.SERVER_HOST }}   # ex: 46.62.142.34
      SERVER_USER: ${{ secrets.SERVER_USER }}   # ex: jiordiviera
      SERVER_PORT: ${{ secrets.SERVER_PORT }}   # ex: 22 ou 2200
      DOMAIN:      ${{ secrets.DOMAIN }}        # ex: api.pulse-send.jiordiviera.me
      # chemin distant: /var/www/<DOMAIN>
      APP_DIR:     /var/www/${{ secrets.DOMAIN }}

    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Start SSH agent (with deploy key)
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Prepare known_hosts (strict)
        run: |
          set -euxo pipefail
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          KN=~/.ssh/known_hosts
          touch "$KN"; chmod 600 "$KN"
          # purge (si IP/port ont changé)
          ssh-keygen -R "${SERVER_HOST}" || true
          ssh-keygen -R "[${SERVER_HOST}]:${SERVER_PORT:-22}" || true
          # prefer ed25519, fallback
          ssh-keyscan -p "${SERVER_PORT:-22}" -t ed25519 "${SERVER_HOST}" 2>/dev/null >> "$KN" || true
          ssh-keyscan -p "${SERVER_PORT:-22}"            "${SERVER_HOST}" 2>/dev/null >> "$KN" || true
          echo "known_hosts lines: $(wc -l < "$KN")"

      # Déploiement: git pull + composer + artisan (en user applicatif)
      - name: Deploy over SSH
        env:
          SSH_OPTS: "-o UserKnownHostsFile=${HOME}/.ssh/known_hosts -o StrictHostKeyChecking=yes"
        run: |
          set -euxo pipefail
          ssh -p "${SERVER_PORT:-22}" $SSH_OPTS "${SERVER_USER}@${SERVER_HOST}" bash <<'EOSH'
          set -euxo pipefail
          APP_DIR="${APP_DIR}"
          cd "$APP_DIR"

          # Sécurité .env / logs
          mkdir -p storage/logs bootstrap/cache
          # (tu es FPM user=jiordiviera -> pas besoin de sudo)
          chmod 775 bootstrap/cache
          find storage -type d -exec chmod 775 {} \;
          find storage -type f -exec chmod 664 {} \;
          [ -f storage/logs/laravel.log ] || touch storage/logs/laravel.log

          # Pull code
          git fetch origin main
          git reset --hard origin/main

          # Dépendances PHP (prod)
          composer install --prefer-dist --optimize-autoloader -q

          # Migrations & caches
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache || true
          php artisan view:cache  || true

          echo "OK"
          EOSH

      - name: Done
        run: echo "✅ Deploy done for $DOMAIN"
